<?php
namespace Cbi\MalwareChecker\Tests\Unit;

use PHPUnit\Framework\TestCase;
use Cbi\MalwareChecker\Response;
use Cbi\MalwareChecker\MalwareChecker;

class MalwareCheckerTest extends TestCase
{
    protected $safeHash;
    protected $infectedHash;

    /**
     * {@inheritdoc}
     */
    public function setUp()
    {
        parent::setUp();
        $this->safeHash = 'ebbd225e6fd4eaa7189423a4b17065b3';
        $this->infectedHash = 'f58628917abcbcfb2b2258b6b46bf721';
    }

    /**
     * The check function returns an array if the hash is infected
     */
    public function testCheckFunctionReturnsArrayOnInfectedHash()
    {
        $infectedResponse = MalwareChecker::check($this->infectedHash);

        $this->assertTrue(is_array($infectedResponse));
    }

    /**
     * The check function returns false if the hash is safe
     */
    public function testCheckFunctionReturnsFalseOnSafeHash()
    {
        $safeResponse = MalwareChecker::check($this->safeHash);

        $this->assertFalse($safeResponse);
    }

    /**
     * The check many function returns only the infected hashes
     */
    public function testCheckManyFunctionOnlyReturnsInfectedHashes()
    {
        $whoisResponse = MalwareChecker::checkMany([$this->infectedHash, $this->safeHash]);

        $this->assertCount(1, $whoisResponse);
        $this->assertContains($this->infectedHash, $whoisResponse[0]);
    }

    /**
     * The check many function returns false if all hashes are safe
     */
    public function testCheckManyFunctionReturnsFalseIfAllHashesAreSafe()
    {
        $whoisResponse = MalwareChecker::checkMany([$this->safeHash, $this->safeHash]);

        $this->assertFalse($whoisResponse);
    }

    /**
     * The makeHash functions returns the correct hash of a file
     */
    public function testMakeHashFunctionReturnsTheCorrectHash()
    {
        $resource = fopen('tests/stubs/test.txt', 'rw');
        $uri = 'tests/stubs/test.txt';
        $md5 = 'fea80f2db003d4ebc4536023814aa885';

        $this->assertEquals(MalwareChecker::makeHash($resource), $md5);
        $this->assertEquals(MalwareChecker::makeHash($uri), $md5);
    }
}
